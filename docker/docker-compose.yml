services:
  postgres:
    image: postgres:16-alpine
    container_name: ${POSTGRES_CONTAINER_NAME}
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      # Performance tuning
      POSTGRES_MAX_CONNECTIONS: ${POSTGRES_MAX_CONNECTIONS}
      POSTGRES_SHARED_BUFFERS: ${POSTGRES_SHARED_BUFFERS}
      POSTGRES_EFFECTIVE_CACHE_SIZE: ${POSTGRES_EFFECTIVE_CACHE_SIZE}
      POSTGRES_MAINTENANCE_WORK_MEM: ${POSTGRES_MAINTENANCE_WORK_MEM}
      POSTGRES_CHECKPOINT_COMPLETION_TARGET: ${POSTGRES_CHECKPOINT_COMPLETION_TARGET}
      POSTGRES_WAL_BUFFERS: ${POSTGRES_WAL_BUFFERS}
      POSTGRES_DEFAULT_STATISTICS_TARGET: ${POSTGRES_DEFAULT_STATISTICS_TARGET}
      POSTGRES_RANDOM_PAGE_COST: ${POSTGRES_RANDOM_PAGE_COST}
      POSTGRES_EFFECTIVE_IO_CONCURRENCY: ${POSTGRES_EFFECTIVE_IO_CONCURRENCY}
      POSTGRES_WORK_MEM: ${POSTGRES_WORK_MEM}
      POSTGRES_MIN_WAL_SIZE: ${POSTGRES_MIN_WAL_SIZE}
      POSTGRES_MAX_WAL_SIZE: ${POSTGRES_MAX_WAL_SIZE}
    ports:
      - '${POSTGRES_PORT}:5432'
    volumes:
      - ${POSTGRES_DATA_DIR}:/var/lib/postgresql/data
      - ${POSTGRES_BACKUP_DIR}:/backups
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    networks:
      - school-admin-network

  backend:
    build:
      context: ..
      dockerfile: docker/backend/Dockerfile
    container_name: ${BACKEND_CONTAINER_NAME:-school-admin-backend}
    env_file:
      - .env
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      - JWT_SECRET=${JWT_SECRET:-your-secret-key-here}
      - PORT=${BACKEND_PORT:-3000}
    healthcheck:
      test: ['CMD-SHELL', 'wget -qO- http://localhost:3000/health || exit 1']
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 15s
    ports:
      - '${BACKEND_PORT:-3000}:3000'
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - school-admin-network

networks:
  school-admin-network:
    name: school-admin-network
    driver: bridge
